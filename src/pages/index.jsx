import React from "react";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Login.module.css";
import { useState, useEffect, useRef } from "react";
import logo from "../public/logo.png";

export default function Login() {
  const [inputEmail, setInputEmail] = useState("");
  const [inputPassword, setInputPassword] = useState("");
  const [enableButton, setEnableButton] = useState(true);
  const [errorMessage, setErrorMessage] = useState(``);
  const emailInput = useRef(null);

  useEffect(() => {
    if (inputEmail.length >= 16 && inputPassword.length >= 8) {
      setEnableButton(false);
    } else {
      setEnableButton(true);
    }
  }, [inputEmail, inputPassword]);

  useEffect(() => {
    if (emailInput.current) {
      emailInput.current.focus();
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  const handleSubmit = async (e) => {
    e.preventDefault();
    console.log("submit");

    const payload = {
      email: inputEmail,
      password: inputPassword,
    };

    // Essa função vai fazer o post dos dados para o backend
    // tando tudo certo, o token será retornado e o usuário estará logado
    // depois que o token for salvo no cokie, o usuário será redirecionado para a página inicial
    // caso as credenciais estejam incorretas, uma mensagem de error será exibida
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className={styles.containerLogo}>
          <Image src={logo} alt="Logo" width={150} height={150} />
        </div>
        <form
          className={styles.formContainer}
          onSubmit={(e) => handleSubmit(e)}
        >
          <input
            type="text"
            placeholder="Email"
            className={styles.input}
            ref={emailInput}
            value={inputEmail}
            onChange={(e) => setInputEmail(e.target.value)}
          />

          <input
            type="password"
            placeholder="Password"
            className={styles.input}
            value={inputPassword}
            onChange={(e) => setInputPassword(e.target.value)}
          />

          {errorMessage && (
            <p className={styles.errorMessage}>{errorMessage}</p>
          )}

          <button
            type="submit"
            className={styles.button}
            disabled={enableButton}
          >
            Entrar
          </button>
        </form>
        <a className={styles.changePasswordLink} href="#">
          Esqueci minha senha
        </a>
      </main>
    </div>
  );
}
